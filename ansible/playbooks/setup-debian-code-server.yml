---
- hosts: codeserver
  remote_user: dnndev
  vars:
    omz_install_path: '$HOME/.oh-my-zsh'
    zsh_plugins:
      - zsh-users/zsh-autosuggestions
      - zsh-users/zsh-syntax-highlighting
    zsh_themes:
      - romkatv/powerlevel10k

  tasks:
    - name: Update the system
      apt:
        update_cache: yes
        autoremove: yes
        autoclean: yes
        upgrade: dist
      become: true

    - name: Install basic packages
      apt:
        name: '{{ item }}'
        state: latest
      with_items:
        - gnupg2
        - curl
        - git
        - wget
        - unzip
        - build-essential
      become: true

    - name: Install Ansible and Python
      apt:
        name: '{{ item }}'
        state: present
      with_items:
        - python3
        - python3-pip
        - python3-venv
        - libssl-dev
        - libffi-dev
        - ansible
        - virtualenv
        - ansible-lint
      become: true

    - name: Install Terraform dependencies
      apt:
        name:
          - unzip
          - wget
          - gnupg
          - software-properties-common
        state: latest
      become: true

    - name: Remove existing HashiCorp GPG key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: absent
      become: true

    - name: Add HashiCorp GPG key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        keyring: /usr/share/keyrings/hashicorp-archive-keyring.gpg
      become: true

    - name: Add HashiCorp repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg]
          https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
        filename: hashicorp
      become: true

    - name: Apt Update
      apt:
        update_cache: true
      become: true

    - name: Install Terraform
      apt:
        name: terraform
        state: latest
      become: true

    - name: Install Node.js and npm
      apt:
        name: '{{ item }}'
        state: latest
      with_items:
        - nodejs
        - npm
      become: true

    - name: Ensure zsh is installed
      become: true
      apt:
        name: zsh
        state: latest

    - name: Set OMZ install path.
      set_fact:
        omz_path: "{{ omz_install_path | default('$HOME/.oh-my-zsh') }}"

    - name: Install Oh My Zsh
      become: true
      .git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: '{{ omz_path }}'
        clone: true
        update: true

    - name: Install ZSH Plugins.
      ansible.builtin.git:
        repo: 'https://github.com/{{ item }}.git'
        dest: "{{ omz_path }}/custom/plugins/{{ item.split('/')[1:] | join('/') }}"
        clone: true
        update: true
      with_items: '{{ zsh_plugins }}'
      when: zsh_plugins is defined

    - name: Install ZSH Themes.
      ansible.builtin.git:
        repo: 'https://github.com/{{ item }}.git'
        dest: "{{ omz_path }}/custom/themes/{{ item.split('/')[1:] | join('/') }}"
        clone: true
        update: true
      with_items: '{{ zsh_themes }}'
      when: zsh_themes is defined

    - name: Set ZSH as the default shell.
      become: true
      ansible.builtin.user:
        name: 'dnndev'
        shell: /bin/zsh
