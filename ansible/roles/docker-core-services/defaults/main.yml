---
environmenttype: 'stage'
# cf_domain_for_apps_to_be_deployed: 'lo.dnnio.dev'
# # services_prefix_and_domain: 'lo.dnnio.dev' # for prod the prefix will be empty before.lo
# cf_api_key: 'e436d5c4f61e4cdb31d54b7e4f35e54c1683e'
# cf_api_email: 'deepakn.dev@gmail.com'
# pf_sense_domain: 'pf.stage.naiduden.dev'

docker_core:
  services:
    cf_domain_for_core_apps: 'stage.core.dnnio.dev'
    cf_domain_for_all_apps: 'stage.apps.dnnio.dev'
    cf_api_key: 'e436d5c4f61e4cdb31d54b7e4f35e54c1683e'
    cf_api_email: 'deepak.dev@gmail.com'
    pf_sense_domain: 'pf.stage.naiduden.dev'
    dns_challenge_subnet: '192.168.80.0/24'
    dns_challenge_gateway: '192.168.80.1'
    dns_challenge_static_ip: '192.168.80.80'

docker_edition: 'ce'
docker_packages:
  - 'docker-{{ docker_edition }}'
  - 'docker-{{ docker_edition }}-cli'
  - 'docker-{{ docker_edition }}-rootless-extras'
  - containerd.io
  - docker-buildx-plugin
  - docker-compose-plugin
docker_packages_state: present

# Service options.
docker_service_manage: true
docker_service_state: started
docker_service_enabled: true
docker_restart_handler_state: restarted

# Docker Compose Plugin options.
docker_install_compose_plugin: true
docker_compose_package: docker-compose-plugin
docker_compose_package_state: present

# Docker Compose options.
docker_install_compose: true
docker_compose_version: 'v2.25.0'
docker_compose_arch: '{{ ansible_architecture }}'
docker_compose_url: 'https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-{{ docker_compose_arch }}'
docker_compose_path: /usr/local/bin/docker-compose

# Enable repo setup
docker_add_repo: true

# Docker repo URL.
docker_repo_url: https://download.docker.com/linux

# Used only for Debian/Ubuntu/Pop!_OS/Linux Mint. Switch 'stable' to 'nightly' if needed.
docker_apt_release_channel: stable
# docker_apt_ansible_distribution is a workaround for Ubuntu variants which can't be identified as such by Ansible,
# and is only necessary until Docker officially supports them.
docker_apt_ansible_distribution: "{{ 'ubuntu' if ansible_distribution in ['Pop!_OS', 'Linux Mint'] else ansible_distribution }}"
docker_apt_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
docker_apt_repository: 'deb [arch={{ docker_apt_arch }} signed-by=/etc/apt/trusted.gpg.d/docker.asc] {{ docker_repo_url }}/{{ docker_apt_ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}'
docker_apt_ignore_key_error: true
docker_apt_gpg_key: '{{ docker_repo_url }}/{{ docker_apt_ansible_distribution | lower }}/gpg'
docker_apt_gpg_key_checksum: 'sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570'
docker_apt_filename: 'docker'

# A list of users who will be added to the docker group.
docker_users: [dnndev]

# Docker daemon options as a dict
docker_daemon_options: {}
