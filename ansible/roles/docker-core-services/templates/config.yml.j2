---
http:
  routers:
    pfsense-secure:
      rule: 'Host(`{{ docker_core.services.pf_sense_domain }}`)'
      tls: {}
      service: pfsense
      middlewares:
        - default-headers
        - https-redirectscheme
      entryPoints:
        - websecure
    kasm-workspaces:
      rule: 'Host(`go.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      service: kasm-workspaces
      middlewares:
        - default-headers
        - https-redirectscheme
      entryPoints:
        - websecure
    pgadmin:
      rule: 'Host(`pgadmin.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      service: pgadmin
      middlewares:
        - https-redirectscheme
        - default-headers
      entryPoints:
        - websecure
    gitea-secure:
      rule: 'Host(`gitea.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      service: gitea
      middlewares:
        - default-headers
        - https-redirectscheme
      entryPoints:
        - websecure
    ipmi-nas-secure:
      rule: 'Host(`ipminas.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      service: ipminas
      entryPoints:
        - websecure
    ipmi-hampi-secure:
      rule: 'Host(`ipmihampi.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: ipmihampi
      entryPoints:
        - websecure
    ipmidandaka-nas-secure:
      rule: 'Host(`ipmidandaka.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: ipmidandaka
      entryPoints:
        - websecure
    truenas-nas-secure:
      rule: 'Host(`truenas.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: truenas
      entryPoints:
        - websecure
    proxmox-lepakshi-secure:
      rule: 'Host(`lepakshi.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: proxmox-lepakshi
      entryPoints:
        - websecure
    proxmox-rameswaram-secure:
      rule: 'Host(`rameswaram.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: proxmox-rameswaram
      entryPoints:
        - websecure
    proxmox-kishkindha-secure:
      rule: 'Host(`kishkindha.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: proxmox-kishkindha
      entryPoints:
        - websecure
    proxmox-hampi-secure:
      rule: 'Host(`hampi.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      tls: {}
      middlewares:
        - default-headers
        - https-redirectscheme
      service: proxmox-hampi
      entryPoints:
        - websecure
    nginx-simple-web:
      rule: 'Host(`simpleweb.{{ docker_core.services.cf_domain_for_all_apps }}`)'
      service: nginx-simple-web
      middlewares:
        - default-headers
        - https-redirectscheme
      entryPoints:
        - websecure
    
  
  middlewares:
    addprefix-pihole:
      addPrefix:
        prefix: '/admin'
    redirectregex-pihole:
      redirectRegex:
        regex: /admin/$
        replacement: /
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    default-headers:
      headers:
        frameDeny: true # X-Frame-Options
        browserXssFilter: true # X-XSS-Protection
        contentTypeNosniff: true # X-Content-Type-Options
        forceSTSHeader: true # Strict-Transport-Security
        stsIncludeSubdomains: true # Strict-Transport-Security
        stsPreload: true # Strict-Transport-Security
        stsSeconds: 15552000 # Strict-Transport-Security
        customFrameOptionsValue: SAMEORIGIN # X-Frame-Options
        customResponseHeaders: # field names are case-insensitive
          # X-Robots-Tag: "all,noarchive,nosnippet,notranslate,noimageindex"
          Server: '' # prevent version disclosure
          X-Powered-By: '' # prevent version disclosure
          X-Forwarded-Proto: 'https' # set X-Forwarded-Proto header to https
        customRequestHeaders:
          X-Forwarded-Proto: https
        sslProxyHeaders:
          X-Forwarded-Proto: 'https'
        hostsProxyHeaders:
          - 'X-Forwarded-Host'
    # Only Allow Local networks
    local-ipwhitelist:
      ipWhiteList:
        sourceRange:
          - 127.0.0.1/32 # localhost
          - 10.0.0.0/8 # private class A
          - 172.16.0.0/12 # private class B
          - 192.168.0.0/16 # private class C
    # rate limiting
    rate-limit:
      rateLimit:
        average: 100
        period: 1
        burst: 100
    # compress
    compress:
      compress:
        excludedContentTypes:
          - text/event-stream
        minResponseBodyBytes: 1200
    # latency check
    latency:
      circuitBreaker:
        expression: LatencyAtQuantileMS(50.0) > 100.0

  services:
    pfsense:
      loadBalancer:
        servers:
          - url: "https://192.168.1.1:10443"
    kasm-workspaces:
      loadBalancer:
        servers:
          - url: 'https://192.168.130.46'
    pgadmin:
      loadBalancer:
        servers:
          - url: 'http://192.168.30.44'
    gitea:
      loadBalancer:
        servers:
          - url: 'http://192.168.30.45'
    ipminas:
      loadBalancer:
        servers:
          - url: "https://192.168.30.36"
    ipmihampi:
      loadBalancer:
        servers:
          - url: "https://192.168.30.38"
    ipmidandaka:
      loadBalancer:
        servers:
          - url: "https://192.168.30.37"
    truenas:
      loadBalancer:
        servers:
          - url: "https://192.168.1.10"
    proxmox-lepakshi:
      loadBalancer:
        servers:
          - url: "https://192.168.80.11:8006"
    proxmox-rameswaram:
      loadBalancer:
        servers:
          - url: "https://192.168.1.13:8006"
    proxmox-kishkindha:
      loadBalancer:
        servers:
          - url: "https://192.168.1.12:8006"
    proxmox-hampi:  
      loadBalancer:
        servers:
          - url: "https://192.168.1.11:8006"
    nginx-simple-web:
      loadBalancer:
        servers:
          - url: 'http://192.168.30.35:8100'

tcp:
  routers:
    gitea-ssh-router:
      entryPoints:
        - ssh
      rule: HostSNI(`*`)
      service: gitea-ssh-service
  services:
    gitea-ssh-service:
      loadBalancer:
        servers:
          - address: 192.168.30.45:2222

# You might need to configure the Docker provider if you are using Docker
providers:
  docker:
    network: iac-provisioned-network
    exposedByDefault: false

# Uncomment and configure the following part if you are using TLS
# tls:
#   certificates:
#     - certFile: "/path/to/certfile"
#     - keyFile: "/path/to/keyfile"

tls:
  options:
    default:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
