---
- name: Install and configure pgAdmin

  block:
    - name: Install pgAdmin
      block:
        - name: Install dependencies
          ansible.builtin.apt:
            name: '{{ item }}'
            state: latest
            update_cache: yes
          loop:
            - gnupg2
            - libpq-dev
            - libgmp3-dev

        - name: Download pgAdmin GPG key
          ansible.builtin.get_url:
            url: https://www.pgadmin.org/static/packages_pgadmin_org.pub
            dest: /tmp/packages_pgadmin_org.pub
            mode: '0644'

        - name: Import pgAdmin GPG key
          ansible.builtin.shell:
            cmd: gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg /tmp/packages_pgadmin_org.pub
            creates: /usr/share/keyrings/packages-pgadmin-org.gpg

        - name: Add pgAdmin repository
          ansible.builtin.apt_repository:
            repo: 'deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/{{ ansible_distribution_release|lower }} pgadmin4 main'
            state: present
            update_cache: yes
            filename: 'pgadmin4'

        - name: Install pgAdmin web mode
          ansible.builtin.apt:
            name: pgadmin4-web
            state: latest
            update_cache: yes

        - name: Copy config_local.py
          become: true
          become_method: sudo
          template:
            src: config_local.py.j2
            dest: '{{ pgadmin4_home_dir }}/web/config_local.py'
            owner: 'www-data'
            group: 'www-data'
            mode: '0644'
          notify: Restart apache2

        - name: Create directories for pgAdmin and give access to www-data
          become: true
          become_method: sudo
          ansible.builtin.file:
            path: '{{ item }}'
            state: directory
            owner: 'www-data'
            group: 'www-data'
            mode: '0700'
          loop:
            - /var/lib/pgadmin4
            - /var/lib/pgadmin4/sessions
            - /var/lib/pgadmin4/storage
            - /var/log/pgadmin4

        - name: Ensure www-data has access to the files
          become: true
          become_method: sudo
          ansible.builtin.file:
            path: '{{ item }}'
            owner: 'www-data'
            group: 'www-data'
            state: touch
            mode: '0700'
          loop:
            - /var/log/pgadmin4/pgadmin4.log

        - name: Install python dependencies.
          ansible.builtin.apt:
            name:
              - python3
              - python3-pip
              - python3-venv
              - python3-psycopg2
              - python3-pexpect
            state: present

        - name: Configure pgAdmin4 (setup web mode)
          become: true
          become_method: sudo
          expect:
            command: '{{ pgadmin4_home_dir }}/venv/bin/python3 {{ pgadmin4_home_dir }}/web/setup.py setup-db'
            creates: '{{ pgadmin4_sqlite_path }}'
            echo: true
            responses:
              'Email\ address:': '{{ pgadmin4_admin_email | trim }}'
              'Password:': '{{ pgadmin4_admin_password | trim }}'
              'Retype\ password:': '{{ pgadmin4_admin_password | trim }}'

        - name: Create directories for pgAdmin and give access to www-data
          become: true
          become_method: sudo
          ansible.builtin.file:
            path: '{{ item }}'
            state: directory
            owner: 'www-data'
            group: 'www-data'
            mode: '0700'
          loop:
            - /var/lib/pgadmin4
            - /var/lib/pgadmin4/sessions
            - /var/lib/pgadmin4/storage
            - /var/log/pgadmin4

        - name: Enable wsgi module
          apache2_module:
            name: wsgi
          notify: Restart apache2

        - name: Enable apache2 pgadmin4 configuration
          file:
            src: /etc/apache2/conf-available/pgadmin4.conf
            path: /etc/apache2/conf-enabled/pgadmin4.conf
            state: link
          notify: Restart apache2

        - name: Apply system-wide pgadmin4 configuration
          lineinfile:
            path: '{{ pgadmin4_system_config_path }}'
            regexp: "^{{ item.key }}\\s*=\\s*.*"
            line: '{{ item.key }} = {{ item.value }}'
            create: yes
          with_dict: '{{ pgadmin4_system_config }}'
          notify: Restart apache2

        - name: Start and enable apache2 service
          service:
            name: apache2
            state: started
            enabled: yes
