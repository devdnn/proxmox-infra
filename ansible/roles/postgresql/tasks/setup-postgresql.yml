---
# tasks file for PostgreSQL role

- block:
    - name: Ensure the locale exists
      locale_gen:
        name: en_US.UTF-8
        state: present

    - name: Set as default locale
      lineinfile:
        path: /etc/default/locale
        regexp: '^LANG='
        line: 'LANG=en_US.UTF-8'
        state: present

    - name: Ensure apt cache is up to date
      apt:
        update_cache: yes

    - name: Instal dependencies for PostgreSQL
      apt:
        name: '{{ item }}'
        state: latest
        update_cache: true
      loop:
        - libpq-dev
        - python3-psycopg2

    - name: Install PostgreSQL packages
      apt:
        name: '{{ item }}'
        state: present
      loop:
        - postgresql-{{ postgresql_version }}
        - postgresql-contrib-{{ postgresql_version }}

    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Copy PostgreSQL configuration template
      template:
        src: postgresql.conf.j2
        dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        owner: postgres
        group: postgres
        mode: '0644'
      notify: Restart postgresql

    - name: Output the environment type
      debug:
        msg: "Environment type is {{ lookup('env', 'CURRENT_ENVIRONMENT') }}"

    - name: Allow CIDR {{postgresql_allow_connections_from_cidr_dev}} to connect to PostgreSQL
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        line: 'host    all             all             {{postgresql_allow_connections_from_cidr_dev}}            md5'
        state: present
      notify: Restart postgresql
      when: lookup('env', 'CURRENT_ENVIRONMENT') == 'dev'

    - name: Allow CIDR {{postgresql_allow_connections_from_cidr_dev}} to connect to PostgreSQL
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        line: 'host    all             all             {{postgresql_allow_connections_from_cidr_stage}}            md5'
        state: present
      notify: Restart postgresql
      when: lookup('env', 'CURRENT_ENVIRONMENT') == 'stage'

    - name: Allow CIDR {{postgresql_allow_connections_from_cidr_prod}} to connect to PostgreSQL
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        line: 'host    all             all             {{postgresql_allow_connections_from_cidr_prod}}            md5'
        state: present
      notify: Restart postgresql
      when: lookup('env', 'CURRENT_ENVIRONMENT') == 'prod'

    - name: Change the password for postgres admin user
      become: true
      become_user: postgres
      postgresql_user:
        name: '{{ postgres_admin_user }}'
        password: '{{ postgres_admin_password }}'

    - name: Apt Cleanup
      apt:
        autoclean: yes
        autoremove: yes
        state: latest

  # - name: Copy PostgreSQL configuration template
  #   template:
  #     src: postgresql.conf.j2
  #     dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
  #   notify: restart postgresql
  become_method: sudo
  become_user: root
  remote_user: dnndev
